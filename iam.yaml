AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Ascode.nl IAM Users, Roles and Policies Stack
Resources:
  godgroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Gods
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"
        - "arn:aws:iam::aws:policy/AWSCloudTrailFullAccess"
        - "arn:aws:iam::aws:policy/job-function/Billing"
  admingroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: EC2Admins
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"
  cloudtrailadmingroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: CloudTrailAdmins
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSCloudTrailFullAccess"
  billingadmingroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: BillingAdmins
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/job-function/Billing"
  billingviewersgroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: BillingViewers
  allusersgroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: allusers
  billingviewpolicy:
    Type: AWS::IAM::Policy
    Properties:
      Groups:
        - !Ref billingviewersgroup
      PolicyName: View_Billing
      PolicyDocument:
        Id: Billing_View
        Version: 2012-10-17
        Statement:
          -
            Sid: AllowViewingOfBills
            Effect: Allow
            Action:
              - "aws-portal:ViewBilling"
              - "awsbillingconsole:ViewBilling"
              - "aws-portal:ViewPaymentMethods"
              - "awsbillingconsole:ViewPaymentMethods"
              - "aws-portal:ViewUsage"
              - "awsbillingconsole:ViewUsage"
            Resource: "*"
          -
            Sid: AllowViewingOfBudget
            Effect: Allow
            Action:
              - "budgets:ViewBudget"
            Resource: "*"
          -
            Sid: AllowViewingOfReports
            Effect: Allow
            Action:
              - "cur:DescribeReportDefinitions"
            Resource: "*"
  mfapolicy:
    Type: AWS::IAM::Policy
    Properties:
      Groups:
        - !Ref allusersgroup
      PolicyName: Force_MFA
      PolicyDocument:
        Id: EnforceMFASignin
        Version: 2012-10-17
        Statement:
          -
            Sid: AllowAllUsersToListAccounts
            Effect: Allow
            Action:
              - "iam:ListAccounAliases"
              - "iam:ListUsers"
              - "iam:ListVirtualMFADevices"
              - "iam:GetAccountPasswordPolicy"
              - "iam:GetAccountSummary"
            Resource: "*"
          -
            Sid: AllowIndividualUserToSeeAndManageOnlyTheirOwnAccountInformation
            Effect: Allow
            Action:
              - "iam:CreateAccessKey"
              - "iam:DeleteAccessKey"
              - "iam:DeleteLoginProfile"
              - "iam:GetLoginProfile"
              - "iam:ListAccessKeys"
              - "iam:UpdateAccessKey"
              - "iam:UpdateLoginProfile"
              - "iam:ListSigningCertificates"
              - "iam:DeleteSigningCertificate"
              - "iam:UpdateSigningCertificate"
              - "iam:UploadSigningCertificate"
              - "iam:ListSSHPublicKeys"
              - "iam:GetSSHPublicKey"
              - "iam:DeleteSSHPublicKey"
              - "iam:UpdateSSHPublicKey"
              - "iam:UploadSSHPublicKey"
            Resource: "arn:aws:iam::*:user/${aws:username}"
          -
            Sid: AllowIndividualUserToListOnlyTheirOwnMFA
            Effect: Allow
            Action:
              - "iam:ListMFADevices"
            Resource:
              - "arn:aws:iam::*:mfa/*"
              - "arn:aws:iam::*:user/${aws:username}"
          -
            Sid: AllowIndividualUserToManageTheirOwnMFA
            Effect: Allow
            Action:
              - "iam:CreateVirtualMFADevice"
              - "iam:DeleteVirtualMFADevice"
              - "iam:EnableMFADevice"
              - "iam:ResyncMFADevice"
            Resource:
              - "arn:aws:iam::*:mfa/${aws:username}"
              - "arn:aws:iam::*:user/${aws:username}"
          -
            Sid: AllowIndividualUserToDeactivateOnlyTheirOwnMFAOnlyWhenUsingMFA
            Effect: Allow
            Action:
              - "iam:DeactivateVirtualMFADevice"
            Resource:
              - "arn:aws:iam::*:mfa/${aws:username}"
              - "arn:aws:iam::*:user/${aws:username}"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: "true"
          -
            Sid: BlockMostAccessUnlessSignedInWithMFA
            Effect: Deny
            NotAction:
              - "iam:ChangePassword"
              - "iam:CreateLoginProfile"
              - "iam:CreateVirtualMFADevice"
              - "iam:DeleteVirtualMFADevice"
              - "iam:EnableMFADevice"
              - "iam:ResyncMFADevice"
              - "iam:ListMFADevices"
              - "iam:ListAccountAliases"
              - "iam:ListUsers"
              - "iam:ListSSHPublicKeys"
              - "iam:ListAccessKeys"
              - "iam:ListServiceSpecificCredentials"
              - "iam:GetAccountSummary"
              - "sts:GetSessionToken"
            Resource: "*"
            Condition:
              BoolIfExists:
                aws:MultiFactorAuthPresent: "false"
  vmimportrole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: vmimport
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - vmie.amazonaws.com
          Action:
          - sts:AssumeRole
          Condition:
            StringEquals:
              sts:Externalid: "vmimport"
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: VMImportRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:ModifySnapshotAttribute
            - ec2:CopySnapshot
            - ec2:RegisterImage
            - ec2:Describe*
            Resource:
            - "*"
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:ListBucket
            - s3:GetBucketLocation
            Resource:
            - arn:aws:s3:::*
  echristiaans:
    Type: AWS::IAM::User
    Properties:
      Groups:
        - !Ref admingroup
        - !Ref allusersgroup
      Path: "/"
      UserName: "echristiaans"
      LoginProfile:
        Password: "MyP@ssword01:-)"
  echristiaansaccesskey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref echristiaans
Outputs:
  userechristiaans:
    Description: Erik Christiaans IAM User Name
    Value: !GetAtt [echristiaans, Arn]
    Export:
      Name: !Sub "${AWS::StackName}-iamechristiaans"
  accessKeyformyaccesskey:
    Value: !Ref echristiaansaccesskey
  SecretKeyformyaccesskey:
    Value: !GetAtt echristiaansaccesskey.SecretAccessKey
